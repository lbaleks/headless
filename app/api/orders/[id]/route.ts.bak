
import { NextResponse } from 'next/server'
import { readDb, writeDb } from '@/utils/db'
import { unwrapParams } from '@/utils/route'

export async function GET(_req:Request, { params }:{ params: Promise<{id:string}> }){
  const { id } = await unwrapParams(params)
  const db = await readDb()
  const o = (db.orders||[]).find((x:any)=>String(x.id)===String(id))
  if(!o) return NextResponse.json({error:'not found'},{status:404})
  return NextResponse.json(o)
}

export async function PUT(req:Request, { params }:{ params: Promise<{id:string}> }){
  const { id } = await unwrapParams(params)
  const patch = await req.json().catch(()=>null)
  if(!patch) return NextResponse.json({error:'invalid body'},{status:400})
  const db = await readDb()
  const i = (db.orders||[]).findIndex((x:any)=>String(x.id)===String(id))
  if(i<0) return NextResponse.json({error:'not found'},{status:404})
  db.orders[i] = { ...db.orders[i], ...patch }
  await writeDb(db)
  return NextResponse.json({ ok:true, order: db.orders[i] })
}

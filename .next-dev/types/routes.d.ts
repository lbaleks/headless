// This file is generated automatically by Next.js
// Do not edit this file manually

type AppRoutes = "/" | "/account" | "/admin" | "/admin/audit" | "/admin/companies" | "/admin/completeness" | "/admin/crm" | "/admin/customers" | "/admin/customers/[id]" | "/admin/dashboard" | "/admin/flags" | "/admin/integrations" | "/admin/integrations/[provider]" | "/admin/integrations/multicase" | "/admin/integrations/omnium" | "/admin/integrations/rackbeat" | "/admin/integrations/salesforce" | "/admin/inventory" | "/admin/jobs" | "/admin/magento" | "/admin/orders" | "/admin/orders/[id]" | "/admin/orders/[id]/fulfillment" | "/admin/orders/[id]/payments" | "/admin/orders/[id]/returns" | "/admin/orders/kanban" | "/admin/orders/new" | "/admin/orders/sync" | "/admin/pricing" | "/admin/pricing/campaigns" | "/admin/pricing/pricelists" | "/admin/products" | "/admin/products/[sku]" | "/admin/products/[sku]/advanced" | "/admin/products/feeds" | "/admin/products/grid" | "/admin/products/new" | "/admin/products/overview" | "/admin/purchasing" | "/admin/returns" | "/admin/settings/order-flows" | "/admin/users" | "/cart" | "/checkout" | "/product/[sku]" | "/store/product/[sku]"
type AppRouteHandlerRoutes = "/api/admin/audit" | "/api/admin/feed" | "/api/admin/flags" | "/api/admin/kpis" | "/api/admin/orders" | "/api/admin/orders/bulk" | "/api/admin/orders/seed" | "/api/ai/reco" | "/api/akeneo/attributes" | "/api/akeneo/channels" | "/api/akeneo/families" | "/api/audit" | "/api/audit/products/[sku]" | "/api/auth/role" | "/api/catalog/product/[sku]/config" | "/api/catalog/product/[sku]/lots" | "/api/catalog/product/[sku]/variants" | "/api/catalog/products" | "/api/catalog/variants" | "/api/companies" | "/api/companies/[id]" | "/api/crm" | "/api/customers" | "/api/customers/[id]" | "/api/customers/sync" | "/api/debug/env/magento" | "/api/debug/health" | "/api/env/auth-check" | "/api/env/check" | "/api/env/check-loader" | "/api/env/cleanup-authcheck" | "/api/flags" | "/api/health" | "/api/integrations" | "/api/integrations/health" | "/api/inventory/allocate" | "/api/inventory/consume" | "/api/jobs" | "/api/jobs/latest" | "/api/jobs/run-sync" | "/api/magento/health" | "/api/magento/sync/orders" | "/api/magento/sync/products" | "/api/orders" | "/api/orders/[id]" | "/api/orders/[id]/returns" | "/api/orders/sync" | "/api/pricing/campaigns" | "/api/pricing/effective" | "/api/pricing/pricelists" | "/api/pricing/quote" | "/api/pricing/rules" | "/api/product-meta/[id]" | "/api/products" | "/api/products/[sku]" | "/api/products/attributes" | "/api/products/attributes/[sku]" | "/api/products/bulk" | "/api/products/completeness" | "/api/products/export" | "/api/products/import" | "/api/products/merged" | "/api/products/seed" | "/api/products/sync" | "/api/products/update-attributes" | "/api/products/update-family" | "/api/returns" | "/api/rules" | "/api/sync/magento/product/[id]" | "/api/upload" | "/api/users" | "/api/users/[id]"
type PageRoutes = never
type LayoutRoutes = "/" | "/admin" | "/admin/products"
type RedirectRoutes = never
type RewriteRoutes = never
type Routes = AppRoutes | PageRoutes | LayoutRoutes | RedirectRoutes | RewriteRoutes | AppRouteHandlerRoutes


interface ParamMap {
  "/": {}
  "/account": {}
  "/admin": {}
  "/admin/audit": {}
  "/admin/companies": {}
  "/admin/completeness": {}
  "/admin/crm": {}
  "/admin/customers": {}
  "/admin/customers/[id]": { "id": string; }
  "/admin/dashboard": {}
  "/admin/flags": {}
  "/admin/integrations": {}
  "/admin/integrations/[provider]": { "provider": string; }
  "/admin/integrations/multicase": {}
  "/admin/integrations/omnium": {}
  "/admin/integrations/rackbeat": {}
  "/admin/integrations/salesforce": {}
  "/admin/inventory": {}
  "/admin/jobs": {}
  "/admin/magento": {}
  "/admin/orders": {}
  "/admin/orders/[id]": { "id": string; }
  "/admin/orders/[id]/fulfillment": { "id": string; }
  "/admin/orders/[id]/payments": { "id": string; }
  "/admin/orders/[id]/returns": { "id": string; }
  "/admin/orders/kanban": {}
  "/admin/orders/new": {}
  "/admin/orders/sync": {}
  "/admin/pricing": {}
  "/admin/pricing/campaigns": {}
  "/admin/pricing/pricelists": {}
  "/admin/products": {}
  "/admin/products/[sku]": { "sku": string; }
  "/admin/products/[sku]/advanced": { "sku": string; }
  "/admin/products/feeds": {}
  "/admin/products/grid": {}
  "/admin/products/new": {}
  "/admin/products/overview": {}
  "/admin/purchasing": {}
  "/admin/returns": {}
  "/admin/settings/order-flows": {}
  "/admin/users": {}
  "/api/admin/audit": {}
  "/api/admin/feed": {}
  "/api/admin/flags": {}
  "/api/admin/kpis": {}
  "/api/admin/orders": {}
  "/api/admin/orders/bulk": {}
  "/api/admin/orders/seed": {}
  "/api/ai/reco": {}
  "/api/akeneo/attributes": {}
  "/api/akeneo/channels": {}
  "/api/akeneo/families": {}
  "/api/audit": {}
  "/api/audit/products/[sku]": { "sku": string; }
  "/api/auth/role": {}
  "/api/catalog/product/[sku]/config": { "sku": string; }
  "/api/catalog/product/[sku]/lots": { "sku": string; }
  "/api/catalog/product/[sku]/variants": { "sku": string; }
  "/api/catalog/products": {}
  "/api/catalog/variants": {}
  "/api/companies": {}
  "/api/companies/[id]": { "id": string; }
  "/api/crm": {}
  "/api/customers": {}
  "/api/customers/[id]": { "id": string; }
  "/api/customers/sync": {}
  "/api/debug/env/magento": {}
  "/api/debug/health": {}
  "/api/env/auth-check": {}
  "/api/env/check": {}
  "/api/env/check-loader": {}
  "/api/env/cleanup-authcheck": {}
  "/api/flags": {}
  "/api/health": {}
  "/api/integrations": {}
  "/api/integrations/health": {}
  "/api/inventory/allocate": {}
  "/api/inventory/consume": {}
  "/api/jobs": {}
  "/api/jobs/latest": {}
  "/api/jobs/run-sync": {}
  "/api/magento/health": {}
  "/api/magento/sync/orders": {}
  "/api/magento/sync/products": {}
  "/api/orders": {}
  "/api/orders/[id]": { "id": string; }
  "/api/orders/[id]/returns": { "id": string; }
  "/api/orders/sync": {}
  "/api/pricing/campaigns": {}
  "/api/pricing/effective": {}
  "/api/pricing/pricelists": {}
  "/api/pricing/quote": {}
  "/api/pricing/rules": {}
  "/api/product-meta/[id]": { "id": string; }
  "/api/products": {}
  "/api/products/[sku]": { "sku": string; }
  "/api/products/attributes": {}
  "/api/products/attributes/[sku]": { "sku": string; }
  "/api/products/bulk": {}
  "/api/products/completeness": {}
  "/api/products/export": {}
  "/api/products/import": {}
  "/api/products/merged": {}
  "/api/products/seed": {}
  "/api/products/sync": {}
  "/api/products/update-attributes": {}
  "/api/products/update-family": {}
  "/api/returns": {}
  "/api/rules": {}
  "/api/sync/magento/product/[id]": { "id": string; }
  "/api/upload": {}
  "/api/users": {}
  "/api/users/[id]": { "id": string; }
  "/cart": {}
  "/checkout": {}
  "/product/[sku]": { "sku": string; }
  "/store/product/[sku]": { "sku": string; }
}


export type ParamsOf<Route extends Routes> = ParamMap[Route]

interface LayoutSlotMap {
  "/": never
  "/admin": never
  "/admin/products": never
}


export type { AppRoutes, PageRoutes, LayoutRoutes, RedirectRoutes, RewriteRoutes, ParamMap, AppRouteHandlerRoutes }

declare global {
  /**
   * Props for Next.js App Router page components
   * @example
   * ```tsx
   * export default function Page(props: PageProps<'/blog/[slug]'>) {
   *   const { slug } = await props.params
   *   return <div>Blog post: {slug}</div>
   * }
   * ```
   */
  interface PageProps<AppRoute extends AppRoutes> {
    params: Promise<ParamMap[AppRoute]>
    searchParams: Promise<Record<string, string | string[] | undefined>>
  }

  /**
   * Props for Next.js App Router layout components
   * @example
   * ```tsx
   * export default function Layout(props: LayoutProps<'/dashboard'>) {
   *   return <div>{props.children}</div>
   * }
   * ```
   */
  type LayoutProps<LayoutRoute extends LayoutRoutes> = {
    params: Promise<ParamMap[LayoutRoute]>
    children: React.ReactNode
  } & {
    [K in LayoutSlotMap[LayoutRoute]]: React.ReactNode
  }

  /**
   * Context for Next.js App Router route handlers
   * @example
   * ```tsx
   * export async function GET(request: NextRequest, context: RouteContext<'/api/users/[id]'>) {
   *   const { id } = await context.params
   *   return Response.json({ id })
   * }
   * ```
   */
  interface RouteContext<AppRouteHandlerRoute extends AppRouteHandlerRoutes> {
    params: Promise<ParamMap[AppRouteHandlerRoute]>
  }
}

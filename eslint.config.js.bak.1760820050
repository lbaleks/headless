import js from '@eslint/js'
import tseslint from 'typescript-eslint'
import react from 'eslint-plugin-react'
import hooks from 'eslint-plugin-react-hooks'
import jsxA11y from 'eslint-plugin-jsx-a11y'
import next from '@next/eslint-plugin-next'
import globals from 'globals'

export default tseslint.config(
  { ignores: ['node_modules/**', '.next/**', 'dist/**', 'var/**'] },

  {
    files: ['**/*.{ts,tsx,js,jsx}'],
    languageOptions: {
      parser: tseslint.parser,
      parserOptions: { ecmaVersion: 'latest', sourceType: 'module', ecmaFeatures: { jsx: true } },
      globals: { ...globals.browser, ...globals.node, React: 'readonly' },
    },
    plugins: { react, 'react-hooks': hooks, 'jsx-a11y': jsxA11y, '@next/next': next },
    rules: {
      ...js.configs.recommended.rules,
      ...react.configs.recommended.rules,
      ...hooks.configs.recommended.rules,
      ...jsxA11y.configs.recommended.rules,
      ...(next.configs?.recommended?.rules ?? {}),

      // TypeScript/DOM/Node håndterer typene: slå av støy
      'no-undef': 'off',

      // Slakk ned ting vi rydder gradvis
      '@typescript-eslint/no-explicit-any': 'warn',
      '@typescript-eslint/triple-slash-reference': 'off',
      'jsx-a11y/label-has-associated-control': 'warn',
      '@next/next/no-html-link-for-pages': 'warn',

      // Disse to lager for mye falske positiver i dette prosjektet
      'react-hooks/purity': 'off',
      'react-hooks/set-state-in-effect': 'off',

      // Kosmetikk
      'react/react-in-jsx-scope': 'off',
      '@typescript-eslint/no-unused-vars': ['warn', { argsIgnorePattern: '^_', varsIgnorePattern: '^_' }],
    },
    settings: { react: { version: 'detect' } },
  },

  // Legg til TS-anbefalingene
  ...tseslint.configs.recommended,

  // CommonJS / Node skript & gateway: tillat require, module, __dirname
  {
    files: [
      'apps/**/src/**/*.{js,cjs,mjs}',
      'apps/**/*.js',
      'm2-gateway/**/*.js',
      'tools/**/*.js',
      'scripts/**/*.js',
      'next.config.js',
      'postcss.config.js',
      'tailwind.config.ts',
    ],
    languageOptions: {
      sourceType: 'commonjs',
      globals: { ...globals.node, require: 'readonly', module: 'readonly', __dirname: 'readonly', __filename: 'readonly' },
    },
    rules: {
      '@typescript-eslint/no-require-imports': 'off',
    },
  },

  // Midlertidig: tillat inline helper-komponent i AdminNav
  { files: ['src/components/layout/AdminNav.tsx'], rules: { 'react-hooks/static-components': 'off' } },
)
